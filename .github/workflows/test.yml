name: Test pyzeebe

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  # 3.6, 3.7 and 3.8 only for passing branch rules
  # https://github.com/camunda-community-hub/pyzeebe/issues/381#issuecomment-2107430780
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' && matrix.python-version != '3.8' }}
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.2"
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' && matrix.python-version != '3.8' }}
      - name: Install the project
        run: uv sync --locked --all-extras --dev
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' && matrix.python-version != '3.8' }}
      - name: Test with pytest
        run: |
          uv run coverage run --source=pyzeebe -m pytest tests/unit
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' && matrix.python-version != '3.8' }}
      - name: Upload to coveralls
        run: |
          uv run coveralls --service=github
        env:
          COVERALLS_PARALLEL: "true"
          COVERALLS_SERVICE_JOB_ID: ${{ github.run_id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.python-version != '3.6' && matrix.python-version != '3.7' && matrix.python-version != '3.8' }}

  integration-test:
    env:
      ZEEBE_IMAGE_VERSION: ${{ matrix.zeebe-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        zeebe-version: ["8.5.25", "8.6.29", "8.7.15", "8.8.0"]

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.2"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Run integration tests
        run: |
          uv run pytest tests/integration

  finish-coveralls:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.14"
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.2"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: finish coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          uv run coveralls --service=github --finish
